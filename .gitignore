# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the .idea directory in version control.
.idea/

# VS Code
.vscode/
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
*.lnk

# Model files and data
models/
*.bin
*.safetensors
*.pt
*.pth
*.ckpt
*.h5
*.onnx
*.tflite
*.pb

# Training data and outputs
data/
!data/.gitkeep
!data/sample/
outputs/
!outputs/.gitkeep
checkpoints/
backups/

# Logs
logs/
*.log
!logs/.gitkeep

# Temporary files
tmp/
temp/
*.tmp
*.temp

# Cache directories
cache/
.cache/
__pycache__/
.pytest_cache/
.mypy_cache/

# Experiment tracking
wandb/
mlruns/
comet_logs/
tensorboard_logs/

# Docker
.dockerignore

# Kubernetes
*.yaml.bak
*.yml.bak

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# Secrets and credentials
*.key
*.pem
*.crt
*.p12
*.pfx
secrets/
credentials/
.secrets
.credentials

# API keys and tokens
.env.local
.env.production
.env.staging
.env.development

# Database files
*.db
*.sqlite
*.sqlite3

# Jupyter notebooks (optional - uncomment if you don't want to track notebooks)
# *.ipynb

# Large files
*.zip
*.tar.gz
*.tar.bz2
*.7z
*.rar

# Media files
*.mp4
*.avi
*.mov
*.wmv
*.flv
*.webm
*.mp3
*.wav
*.flac
*.aac
*.ogg
*.jpg
*.jpeg
*.png
*.gif
*.bmp
*.tiff
*.svg
*.ico

# Documentation builds
docs/build/
docs/_build/
site/

# Coverage reports
.coverage
.coverage.*
coverage.xml
*.cover
htmlcov/

# Profiling
*.prof
*.lprof

# Memory dumps
*.hprof
*.dump

# IDE specific
.idea/
.vscode/
*.swp
*.swo

# Package managers
node_modules/
package-lock.json
yarn.lock

# Build artifacts
build/
dist/
*.egg-info/

# Configuration overrides
config.local.yaml
config.override.yaml
config.dev.yaml
config.prod.yaml

# Custom ignores
# Add your project-specific ignores here

# Keep empty directories
!.gitkeep

# Ignore all hidden files except specific ones
.*
!.gitignore
!.gitkeep
!.env.example
!.github/
!.dockerignore

# Ignore specific large model directories
huggingface_cache/
transformers_cache/
torch_cache/

# Ignore monitoring data
prometheus_data/
grafana_data/

# Ignore runtime files
pid/
*.pid
*.sock

# Ignore compiled extensions
*.so
*.dylib
*.dll

# Ignore backup files
*.bak
*.backup
*.old

# Ignore editor files
.editorconfig

# Ignore local development files
local/
dev/

# Ignore test outputs
test_outputs/
test_results/

# Ignore benchmark results
benchmarks/results/
performance/

# Ignore generated documentation
auto_docs/
api_docs/

# Ignore deployment files
deployment/secrets/
deployment/configs/
k8s/secrets/

# Ignore monitoring configs with secrets
monitoring/secrets/
monitoring/configs/

# Ignore SSL certificates
ssl/
certs/

# Ignore local scripts
scripts/local/
utils/local/

# Ignore experiment results
experiments/
results/

# Ignore user-specific files
user_configs/
user_data/
user_models/